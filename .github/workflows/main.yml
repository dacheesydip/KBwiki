# .github/workflows/rst-to-html.yml
name: Convert RST to HTML with Pandoc

on:
  push:
    paths:
      - '**.rst'
  pull_request:
    paths:
      - '**.rst'

jobs:
  convert-rst-to-html:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install Pandoc
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
        pandoc --version
        
    - name: Get changed RST files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          **.rst
          
    - name: Debug information
      run: |
        echo "Any changed: ${{ steps.changed-files.outputs.any_changed }}"
        echo "All changed files: ${{ steps.changed-files.outputs.all_changed_files }}"
        echo "Repository contents:"
        find . -name "*.rst" -type f
        
    - name: Convert RST files to HTML
      run: |
        # Create conversion script
        cat > convert_with_pandoc.sh << 'EOF'
        #!/bin/bash
        
        converted_files=()
        
        # Function to convert a single RST file
        convert_file() {
            local rst_file="$1"
            local html_file="${rst_file%.rst}.html"
            
            echo "Converting: $rst_file -> $html_file"
            
            # Check pandoc version and raw HTML capabilities
            pandoc_version=$(pandoc --version | head -1)
            echo "Using: $pandoc_version"
            
            # Use pandoc to convert RST to HTML with raw HTML preservation
            # For newer pandoc versions, raw HTML is enabled by default in RST
            if pandoc "$rst_file" \
                -f rst+raw_html \
                -t html5 \
                -s \
                --metadata title="$(basename "$rst_file" .rst)" \
                --wrap=none \
                -o "$html_file"; then
                echo "✓ Successfully converted $rst_file to $html_file"
                converted_files+=("$html_file")
                return 0
            else
                echo "✗ Failed to convert $rst_file"
                return 1
            fi
        }
        
        # Process changed files or find all RST files
        if [ -n "$1" ]; then
            # Process specific files passed as arguments
            for file in $@; do
                if [ -f "$file" ] && [[ "$file" == *.rst ]]; then
                    convert_file "$file"
                else
                    echo "Skipping: $file (not found or not an RST file)"
                fi
            done
        else
            # Find all RST files if no specific files provided
            echo "No specific files provided, searching for all RST files..."
            while IFS= read -r -d '' rst_file; do
                convert_file "$rst_file"
            done < <(find . -name "*.rst" -type f -print0)
        fi
        
        # Write list of converted files
        if [ ${#converted_files[@]} -gt 0 ]; then
            printf "%s\n" "${converted_files[@]}" > converted_files.txt
            echo "Converted ${#converted_files[@]} files:"
            cat converted_files.txt
        else
            echo "No files were converted"
        fi
        EOF
        
        chmod +x convert_with_pandoc.sh
        
        # Run conversion
        if [ -n "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
          echo "Converting changed files..."
          ./convert_with_pandoc.sh ${{ steps.changed-files.outputs.all_changed_files }}
        else
          echo "No changed files detected, converting all RST files..."
          ./convert_with_pandoc.sh
        fi
        
    - name: Check results
      run: |
        echo "Checking for converted files..."
        if [ -f "converted_files.txt" ]; then
          echo "Files that were converted:"
          cat converted_files.txt
          echo "Verifying HTML files exist:"
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              echo "✓ $file exists ($(wc -c < "$file") bytes)"
              echo "First few lines:"
              head -3 "$file"
              echo "---"
            else
              echo "✗ $file missing"
            fi
          done < converted_files.txt
        else
          echo "No converted_files.txt found"
        fi
        
        echo "All HTML files in repository:"
        find . -name "*.html" -type f -exec ls -la {} \;
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add converted HTML files
        if [ -f "converted_files.txt" ]; then
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              git add "$file"
              echo "Added $file to git"
            fi
          done < converted_files.txt
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update HTML files from RST changes

Updated files:
$(cat converted_files.txt | sed 's/^/- /')"
            
            git push
            echo "Changes pushed to repository"
          fi
        else
          echo "No converted files to commit"
        fi

# .github/workflows/rst-to-html.yml
name: Convert RST to HTML

on:
  push:
    paths:
      - '**.rst'
  pull_request:
    paths:
      - '**.rst'

jobs:
  convert-rst-to-html:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install docutils
        
    - name: Get changed RST files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          **.rst
          
    - name: Convert RST files to HTML
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        # Create conversion script
        cat > convert_rst.py << 'EOF'
        import os
        import sys
        from docutils.core import publish_file
        
        def convert_rst_to_html(rst_file):
            # Determine output HTML file path
            html_file = os.path.splitext(rst_file)[0] + '.html'
            
            try:
                # Convert RST to HTML using docutils
                publish_file(
                    source_path=rst_file,
                    destination_path=html_file,
                    writer_name='html',
                    settings_overrides={
                        'input_encoding': 'utf-8',
                        'output_encoding': 'utf-8',
                        'embed_stylesheet': False,
                        'raw_enabled': True,
                        'file_insertion_enabled': False,
                        'halt_level': 2,
                        'report_level': 2,
                        'doctitle_xform': False,
                        'initial_header_level': 1,
                    }
                )
                print(f"✓ Converted {rst_file} to {html_file}")
                return html_file
                
            except Exception as e:
                print(f"✗ Error converting {rst_file}: {e}")
                # Try with more permissive settings
                try:
                    publish_file(
                        source_path=rst_file,
                        destination_path=html_file,
                        writer_name='html',
                        settings_overrides={
                            'input_encoding': 'utf-8',
                            'output_encoding': 'utf-8',
                            'embed_stylesheet': False,
                            'raw_enabled': True,
                            'file_insertion_enabled': False,
                            'halt_level': 5,  # More permissive
                            'report_level': 5,
                        }
                    )
                    print(f"✓ Converted {rst_file} to {html_file} (permissive mode)")
                    return html_file
                except Exception as e2:
                    print(f"✗ Failed to convert {rst_file}: {e2}")
                    raise e2
        
        if __name__ == "__main__":
            changed_files = sys.argv[1:]
            converted_files = []
            
            for rst_file in changed_files:
                if rst_file.endswith('.rst') and os.path.exists(rst_file):
                    try:
                        html_file = convert_rst_to_html(rst_file)
                        converted_files.append(html_file)
                    except Exception as e:
                        print(f"✗ Error converting {rst_file}: {e}")
                        sys.exit(1)
            
            # Output list of converted files for next step
            if converted_files:
                with open('converted_files.txt', 'w') as f:
                    f.write('\n'.join(converted_files))
        EOF
        
        # Run conversion on changed files
        python convert_rst.py ${{ steps.changed-files.outputs.all_changed_files }}
        
    - name: Commit and push changes
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add converted HTML files
        if [ -f "converted_files.txt" ]; then
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              git add "$file"
              echo "Added $file to git"
            fi
          done < converted_files.txt
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update HTML files from RST changes
            
            Updated files:
            $(cat converted_files.txt | sed 's/^/- /')"
            
            git push
          fi
        fi
